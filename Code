 /// <summary>
 /// File Download using OCM ContentID
 /// </summary>
 /// <param name = "OCMContentID" ></ param >
 //[CustomAuthorize]
 public ActionResult APIFileDownload(string OCMContentID, string AssociateID)
 {
     //string OCMContentID = ocmService.stringSanitizer(HttpUtility.HtmlEncode(Request.QueryString["OCMContentID"]));
     string path = Server.MapPath("~/App_Data/SpecialPay.json");

     WrapperUI ocmFileupload = new WrapperUI();
     OCMBL DownloadOCMFile = new OCMBL();
     DownloadedFileContent downloadedFile = new DownloadedFileContent();
     //var context = UserContext.GetUserContext();
     //var contextUserID = context.CurrentUser.UserId;
     var contextUserID = "311556";
     try
     {
         //System.Web.HttpResponseBase
         string MetadataPath = Server.MapPath("~/App_Data/SpecialPay.json");
         var appJson = System.IO.File.ReadAllText(MetadataPath);
         dynamic TaxonomieJsonObj = JsonConvert.DeserializeObject(appJson);
         TaxonomieJsonObj.DeptID = TaxonomieJsonObj["DeptID"].ToString();
         TaxonomieJsonObj.Region = TaxonomieJsonObj["Region"].ToString();
         TaxonomieJsonObj.DocType = TaxonomieJsonObj["DocType"].ToString();
         string AppJson = JsonConvert.SerializeObject(TaxonomieJsonObj);

         string AccessToken = APITokenGenerator.GetToken();
         string downloadApi =
             ConfigurationManager.AppSettings.Get("OCMAPIDownload").ToString();
         string searchApi =
             ConfigurationManager.AppSettings.Get("OCMAPISearch").ToString();
         string Type = ConfigurationManager.AppSettings.Get("AssetType").ToString();
         downloadedFile =
             ocmService.DownloadFileContent(AccessToken, OCMContentID, MetadataPath, downloadApi, Type);

         if (downloadedFile != null && downloadedFile.FileByteArray != null)
         {
             downloadedFile.FileName = HttpUtility.UrlDecode(downloadedFile.FileName.ToString());
             this.Response.Clear();
             this.Response.ContentType = "application/octet-stream";
             this.Response.AddHeader("Content-Disposition",
                 "attachment; filename=\"" + HttpUtility.HtmlEncode(downloadedFile.FileName) + "\"");
             this.Response.AddHeader("Content-Length", Convert.ToString(downloadedFile.FileByteArray.Length));
             this.Response.AddHeader("X-Oracle-Dms-Ecid", downloadedFile.Ecid);
             this.Response.BinaryWrite(downloadedFile.FileByteArray);
             this.Response.Flush();
             this.Response.End();
             return null;
         }
         else
         {
             //this.Json("File content id not found.");
             return View("Download", ocmFileupload);
         }
     }
     catch (FileNotFoundException ex)
     {
         OCMExceptionLog.HandleException(ex.ToString(), this.GetType().Name, contextUserID, "Apifiledownload", "Download Failed", ex.StackTrace.ToString());
         string msg = "Issue in downloading the file";
         return this.Json(msg);
     }
     catch (HttpException ex)
     {
         OCMExceptionLog.HandleException(ex.ToString(), this.GetType().Name, contextUserID, "Apifiledownload", "Download Failed", ex.StackTrace.ToString());
         string msg = "Issue in downloading the file";
         return this.Json(msg);

     }
     catch (SystemException ex)
     {
         OCMExceptionLog.HandleException(ex.ToString(), this.GetType().Name, contextUserID, "Apifiledownload", "Download Failed", ex.StackTrace.ToString());
         string msg = "Issue in downloading the file";
         return this.Json(msg);

     }
     catch(Exception ex)
     {
         OCMExceptionLog.HandleException(ex.ToString(), this.GetType().Name, contextUserID, "Apifiledownload","Download Failed", ex.StackTrace.ToString());
         string msg = "Issue in downloading the file";
         return this.Json(msg);
     }
     return null; //ConstructorNeedsTagAttribute to add common catch excep
 }
