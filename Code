fileupload:


    protected void BtnUpload_Click(object sender, EventArgs e)
    {
        ErrorLogger loggerECM = new ErrorLogger();
        loggerECM.LogErrorECM("Upload - FileUpload - BtnUpload_Click", "Country " + 1 + "Role " + this.RoleID + "ComponentGroupID "
                   + 0 + "ComponentID " + this.componentId + "ProjectID " + 0, this.userId, "ECM Upload Triggered");

        try
        {
            if (this.filUploadIcon.HasFile)
            {
                string fileName = EncodeHelper.HtmlEncode(Path.GetFileName(this.filUploadIcon.FileName));
                string strFileName = fileName.Replace("'", string.Empty).Replace(@"\", string.Empty);
                string strFileType = System.IO.Path.GetExtension(strFileName).ToString().ToLower();
               
                if ((strFileType.ToUpper() == ".MSG" || strFileType.ToUpper() == ".ZIP")
                    && string.IsNullOrEmpty(this.componentId))
                {
                    string[] strfileTypes = new string[] { ".msg", ".zip" };
                    string[] result = checkFileUpload(strfileTypes, 0);

                    this.fullpath = result[0].ToString();

                    if (result[1] == "")
                    {
                        this.filUploadIcon.PostedFile.SaveAs(EncodeHelper.HtmlEncode(this.fullpath));
                        string fileUploadId = this.UploadFiletoECM(this.fullpath, strFileType, strFileName);
                        this.textFileName.Value = fileUploadId;
                    }
                    else
                    {
                        throw new SystemException(result[1]);
                    }
                    
                    if (this.hdnframeID.Value.ToString() == "frame")
                    {
                        string script =
     "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandler');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frameforhide")
                    {
                        string script =
     "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandlerhide');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frame2")
                    {
                        string script =
       "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandler2');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frame3")
                    {
                        string script =
        "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandler3');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }            
                    else if (this.hdnframeID.Value.ToString() == "frame1")
                    {
                        string script =
      "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandler1');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frame4")
                    {
                        string script =
"<script type='text/javascript'>parent.$(parent.document).trigger('eventhandler4');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frame5")
                    {
                        string script =
   "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandler5');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frame6")
                    {
                        string script =
         "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandler6');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frame7")
                    {
                        string script =
         "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandler7');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frame8")
                    {
                        string script =
         "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandler8');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frame9")
                    {
                        string script =
         "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandlerTRT');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }


                    this.hdnframeID.Value = string.Empty;
                }
                else if ((strFileType.ToUpper() == ".MSG" || strFileType.ToUpper() == ".DOC"
                     || strFileType.ToUpper() == ".DOCX" || strFileType.ToUpper() == ".XLS"
                     || strFileType.ToUpper() == ".XLSX" || strFileType.ToUpper() == ".ZIP"
                     || strFileType.ToUpper() == ".NSF" || strFileType.ToUpper() == ".GIF"
                     || strFileType.ToUpper() == ".PNG" || strFileType.ToUpper() == ".PDF"
                     || strFileType.ToUpper() == ".JPG" || strFileType.ToUpper() == ".JPEG")
                 && (!string.IsNullOrEmpty(this.componentId)))
                {
                    string[] strfileTypes = new string[] { ".msg", ".zip" };
                    string[] result = checkFileUpload(strfileTypes, 0);

                    this.fullpath = result[0].ToString();

                    if (result[1] == "")
                    {
                        this.filUploadIcon.PostedFile.SaveAs(EncodeHelper.HtmlEncode(this.fullpath));
                        ////string fileUploadId = this.UploadFiletoSAN(this.fullpath, strFileType, strFileName);
                        string fileUploadId = this.UploadFiletoECM(this.fullpath, strFileType, strFileName);
                        this.textFileName.Value = fileUploadId;
                    }
                    else
                    {
                        throw new SystemException(result[1]);
                    }

                    if (this.hdnframeID.Value.ToString() == "frameMBInvoice")
                    {
                        string script =
         "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandlerMBInvoice');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                }
                else
                {
                    string script =
 "<script type='text/javascript'>parent.$(parent.document).trigger('popupprogresseventshow');</script>";
                    Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);

                    this.hdnframeID.Value = string.Empty;
                }
            }
        }
        catch (SystemException ex)
        {
            ErrorLogger logger = new ErrorLogger();
            logger.LogError(ex);
            if (!(ex.Message.Equals("Uploaded file is empty") ||
          ex.Message.Equals("Number of columns in uploaded file does not match") ||
         ex.Message.Equals("Please fill the mandatory columns")))
            {
                SendMailer.SendErrorMaileronFailure("Upload data", ex);
            }

            string script = string.Concat("<script type='text/javascript'>Message('", ex.Message, "');", "</script>");
            Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
        }
    }

   


Apacfileupload:

    protected void BtnUpload_Click(object sender, EventArgs e)
    {
        ErrorLogger loggerECM = new ErrorLogger();
        loggerECM.LogErrorECM("Upload - APAC_FileUpload - BtnUpload_Click", "Country APAC Role " + this.RoleID + "ComponentGroupID "
                   + 0 + "ComponentID " + this.componentId + "ProjectID " + 0, this.userId, "ECM Upload Triggered");

        try
        {
            Regex regPathTrav1 = new Regex("(\\.\\.\\/)");
            Regex regPathTrav2 = new Regex("(\\.\\.\\\\)");
            string strFileType = string.Empty;
            if (this.filUploadIcon.HasFile)
            {
                string fileName = EncodeHelper.HtmlEncode(Path.GetFileName(this.filUploadIcon.FileName));
                string strFileName = fileName.Replace("'", string.Empty).Replace(@"\", string.Empty);
                strFileType = System.IO.Path.GetExtension(strFileName).ToString().ToLower();

                if ((strFileType.ToUpper() == ".MSG" || strFileType.ToUpper() == ".ZIP") &&
                    string.IsNullOrEmpty(this.componentId))
                {

                    string[] strfileTypes = new string[] { ".msg", ".zip" };
                    string[] result = checkFileUpload(strfileTypes, 0);

                    this.fullpath = result[0].ToString();

                    if (result[1] == "")
                    {
                        this.filUploadIcon.PostedFile.SaveAs(EncodeHelper.HtmlEncode(this.fullpath));
                        ////string fileUploadId = this.UploadFiletoSAN(this.fullpath, strFileType, strFileName);
                        string fileUploadId = this.UploadFiletoECM(fullpath, strFileType, strFileName);
                        this.textFileName.Value = fileUploadId;
                    }
                    else
                    {
                        throw new SystemException(result[1]);
                    }

                    if (this.hdnframeID.Value.ToString() == "frame")
                    {
                        string script =
     "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandler');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frameforhide")
                    {
                        string script =
     "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandlerhide');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frame2")
                    {
                        string script =
       "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandler2');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frame3")
                    {
                        string script =
        "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandler3');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frame1")
                    {
                        string script =
      "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandler1');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frame4")
                    {
                        string script =
"<script type='text/javascript'>parent.$(parent.document).trigger('eventhandler4');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frame5")
                    {
                        string script =
   "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandler5');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frame6")
                    {
                        string script =
         "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandler6');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frame7")
                    {
                        string script =
         "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandler7');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frame8")
                    {
                        string script =
         "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandler8');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frameSF")
                    {
                        string script =
         "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandlerSF');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frameSFReceipt")
                    {
                        string script =
         "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandlerSFReceipt');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frameSFInvoice")
                    {
                        string script =
         "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandlerSFInvoice');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frameDeclaration")
                    {
                        string script =
         "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandlerSFDeclaration');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frameOT")
                    {
                        string script =
         "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandlerOT');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }
                    else if (this.hdnframeID.Value.ToString() == "frameApp")
                    {
                        string script =
         "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandlerApp');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }

                    this.hdnframeID.Value = string.Empty;
                }
                else if ((strFileType.ToUpper() == ".MSG" || strFileType.ToUpper() == ".DOC"
                    || strFileType.ToUpper() == ".DOCX" || strFileType.ToUpper() == ".XLS"
                    || strFileType.ToUpper() == ".XLSX" || strFileType.ToUpper() == ".ZIP"
                    || strFileType.ToUpper() == ".NSF" || strFileType.ToUpper() == ".GIF"
                    || strFileType.ToUpper() == ".PNG" || strFileType.ToUpper() == ".PDF"
                    || strFileType.ToUpper() == ".JPG" || strFileType.ToUpper() == ".JPEG")
                && (!string.IsNullOrEmpty(this.componentId)))
                {
                    if (this.componentId.Equals("18") || this.componentId.Equals("48"))
                    {
                        string[] strfileTypes = new string[] { ".msg", ".doc", ".docx", ".xls", ".xlsx", ".zip", ".nsf", ".gif", "png", ".pdf", ".jpg", ".jpeg" };
                        string[] result = checkFileUpload(strfileTypes, 0);

                        this.fullpath = result[0].ToString();

                        if (result[1] == "")
                        {
                            this.filUploadIcon.PostedFile.SaveAs(EncodeHelper.HtmlEncode(this.fullpath));
                            ////string fileUploadId = this.UploadFiletoSAN(this.fullpath, strFileType, strFileName);
                            string fileUploadId = this.UploadFiletoECM(fullpath, strFileType, strFileName);
                            this.textFileName.Value = fileUploadId;
                        }
                        else
                        {
                            throw new SystemException(result[1]);
                        }

                        if (this.hdnframeID.Value.ToString() == "frameSF")
                        {
                            string script =
                   "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandlerSF');</script>";
                            Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                        }
                        else if (this.hdnframeID.Value.ToString() == "frameSFReceipt")
                        {
                            string script =
             "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandlerSFReceipt');</script>";
                            Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                        }
                        else if (this.hdnframeID.Value.ToString() == "frameSFInvoice")
                        {
                            string script =
             "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandlerSFInvoice');</script>";
                            Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                        }
                        else if (this.hdnframeID.Value.ToString() == "frameDeclaration")
                        {
                            string script =
             "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandlerSFDeclaration');</script>";
                            Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                        }
                    }
                    else if (this.componentId.Equals("51"))
                    {
                        string[] strfileTypes = new string[] { ".msg", ".doc", ".docx", ".xls", ".xlsx", ".zip", ".nsf", ".gif", "png", ".pdf", ".jpg", ".jpeg" };
                        string[] result = checkFileUpload(strfileTypes, 0);

                        this.fullpath = result[0].ToString();

                        if (result[1] == "")
                        {
                            this.filUploadIcon.PostedFile.SaveAs(EncodeHelper.HtmlEncode(this.fullpath));
                            ////string fileUploadId = this.UploadFiletoSAN(this.fullpath, strFileType, strFileName);
                            string fileUploadId = this.UploadFiletoECM(fullpath, strFileType, strFileName);
                            this.textFileName.Value = fileUploadId;
                        }
                        else
                        {
                            throw new SystemException(result[1]);
                        }

                        if (this.hdnframeID.Value.ToString() == "frameWBInvoice")
                        {
                            string script =
             "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandlerWBInvoice');</script>";
                            Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                        }
                    }
                    else if (this.componentId.Equals("58"))
                    {
                        string[] strfileTypes = new string[] { ".msg", ".doc", ".docx", ".xls", ".xlsx", ".zip", ".nsf", ".gif", "png", ".pdf", ".jpg", ".jpeg" };
                        string[] result = checkFileUpload(strfileTypes, 0);

                        this.fullpath = result[0].ToString();

                        if (result[1] == "")
                        {
                            this.filUploadIcon.PostedFile.SaveAs(EncodeHelper.HtmlEncode(this.fullpath));
                            ////string fileUploadId = this.UploadFiletoSAN(this.fullpath, strFileType, strFileName);
                            string fileUploadId = this.UploadFiletoECM(fullpath, strFileType, strFileName);
                            this.textFileName.Value = fileUploadId;
                        }
                        else
                        {
                            throw new SystemException(result[1]);
                        }

                        if (this.hdnframeID.Value.ToString() == "frameB_Certificate")
                        {
                            string script =
             "<script type='text/javascript'>parent.$(parent.document).trigger('eventhandlerB_Certificate');</script>";
                            Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                        }
                    }
                }
                else
                {
                    if (!string.IsNullOrEmpty(this.componentId))
                    {
                        if (this.componentId.Equals("18") || this.componentId.Equals("48"))
                        {
                            string script =
       "<script type='text/javascript'>parent.$(parent.document).trigger('popupprogresseventshow_APAC');</script>";
                            Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                        }

                    }
                    else
                    {
                        string script =
     "<script type='text/javascript'>parent.$(parent.document).trigger('popupprogresseventshow');</script>";
                        Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
                    }

                    this.hdnframeID.Value = string.Empty;
                }
            }
        }
        catch (SystemException ex)
        {
            ErrorLogger logger = new ErrorLogger();
            logger.LogError(ex);
            if (!(ex.Message.Equals("Uploaded file is empty") ||
          ex.Message.Equals("Number of columns in uploaded file does not match") ||
         ex.Message.Equals("Please fill the mandatory columns")))
            {
                SendMailer.SendErrorMaileronFailure("Upload data", ex);
            }

            string script = string.Concat("<script type='text/javascript'>Message('", ex.Message, "');", "</script>");
            Page.ClientScript.RegisterStartupScript(this.GetType(), "onload", script);
        }
    }
