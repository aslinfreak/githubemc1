USE [OneC_SPay]
GO
/****** Object:  StoredProcedure [dbo].[usp_NLD_MoveExpToValidUploaderData]    Script Date: 29-10-2025 16:51:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- ======================================================================================================================       
-- AUTHOR     : TEAM
-- CREATE DATE: JULY 20, 2020    
-- DESCRIPTION: Added the documentation for the stored procedure
-- ====================================================================================================================== 
ALTER PROCEDURE [dbo].[usp_NLD_MoveExpToValidUploaderData]  
(  
 @KeyId INT,    
 @ComponentId INT=NULL,
 @ComponentGrpID INT=NULL,    
 @LoginId VARCHAR(10),
 @Amount varchar(10)= NULL,
 @Amount1 varchar(10)= NULL,
 @Distance varchar(10),
 @BeneficiaryAmount varchar(10)= NULL,
 @PayoutType varchar(100)=NULL,
 @ProjectId varchar(20)=null,	
 @StartDate varchar(15)=null,
 @EndDate varchar(15)=null,
 @EffectiveDate varchar(15)=null,
 @StartTime VARCHAR(5),
 @EndTime VARCHAR(5),
 @AccountID INT=null,
 @SpecialCaseReason varchar(100)=NULL,
 @MailUploadId VARCHAR(50)=null,
 @CountryId INT=NULL,
 @Frequency varchar(50)=NULL,
 @InputRemarks varchar(50)=NULL,
 @CurrencyCode varchar(50)=NULL,
 @TotalHours int =NULL,
 @DayType int=null,
 @AdvisedMonth varchar(100)=NULL,
 @Year varchar(20)=NULL

)  
AS  
SET NOCOUNT ON  
BEGIN TRANSACTION;  
BEGIN TRY   

--Declare @ComponentCountryMappingId
declare @ComponentCountryMappingId int

	select @ComponentCountryMappingId=CCM.PK_ComponentCountryMappingID 
	from COMPONENTCOUNTRYMAPPING CCM 
		INNER JOIN COMPONENTMASTER CM ON CM.PK_COMPONENTID=CCM.FK_COMPONENTID
		INNER JOIN ComponentGroupMaster CGM WITH (NOLOCK) 
		ON CGM.PK_ComponentGroupID=CM.FK_ComponentGroupID 
		where CGM.PK_ComponentGroupID=@ComponentGrpID
		and CCM.FK_componentcountryid=@CountryId

		--In City Allowance
 IF(@ComponentGrpID=28)
  BEGIN         
      EXEC [dbo].[usp_APAC_InCity_MoveExpToValidUploaderData] @KeyId,@ComponentGrpID,
	  @StartDate,@EndDate,@LoginId,@CountryId,@ComponentCountryMappingId    
  END 

  --Sign On Bonus
 IF(@ComponentGrpID=29)
  BEGIN         
      EXEC [dbo].[usp_NLDSignOnBonus_MoveExpToValidUploaderData] @KeyId,@ComponentGrpID,
	  @Amount,@PayoutType,@LoginId,@CountryId,@ComponentCountryMappingId    
  END 

  --Retention Bonus
   IF(@ComponentGrpID=49) 
  BEGIN         
      EXEC [dbo].[usp_RetentionBonus_MoveExpToValidUploaderData] @KeyId,@ComponentGrpID,
	  @Amount,@PayoutType,@LoginId,@CountryId,@ComponentCountryMappingId    
  END 

  --Relocation Allowance
 IF(@ComponentGrpID=30)
  BEGIN       
      EXEC [dbo].[usp_NLDRelocation_MoveExpToValidUploaderData] @KeyId,@ComponentGrpID,
	  @PayoutType,@SpecialCaseReason,@MailUploadId,@Amount1,@LoginId,@CountryId
  END 

  --Transition Allowance
IF(@ComponentGrpID=34)
  BEGIN       
      EXEC [dbo].[usp_NLDTransition_MoveExpToValidUploaderData] @KeyId,@ComponentGrpID,
	  @PayoutType,@LoginId,@CountryId
  END 

  --Honorarium
IF(@ComponentGrpID=35)
  BEGIN       
      EXEC [dbo].[usp_NLDHonorarium_MoveExpToValidUploaderData] @KeyId,@ComponentGrpID,
	  @PayoutType,@Amount,@ProjectId,@LoginId,@CountryId
  END 

  --Net Travel  Allowance
IF(@ComponentGrpID=31)
   BEGIN    
    EXEC [dbo].[usp_NLDNetTravel_MoveExpToValidUploaderData]  @keyId,@ComponentGrpID,
	@Amount,@StartDate,@EffectiveDate,@LoginId,@MailUploadId,@PayoutType,
	@ComponentCountryMappingId
   END  
IF(@ComponentGrpID=32)
   BEGIN    
    EXEC [dbo].[usp_NLDCommutingAllowance_MoveExpToValidUploaderData]  @keyId,@ComponentGrpID,
	@Distance,@StartDate,@EffectiveDate,@LoginId,@MailUploadId,@PayoutType,
	@SpecialCaseReason,@CountryId,@ComponentCountryMappingId
   END  
        
	--On Call Allowance
IF(@ComponentGrpID=39 OR @ComponentGrpID=22)
   BEGIN    
    EXEC [dbo].[usp_NLD_OT_MoveExpToValidUploaderData] @KeyId,@ComponentGrpID,@StartDate,@EndDate,
	@LoginId,@MailUploadId,@TotalHours,@DayType,@ComponentCountryMappingId
   END  

IF(@ComponentGrpID=36 OR @ComponentGrpID=37)
   BEGIN    
    EXEC [dbo].[usp_NLDInsurance_MoveExpToValidUploaderData]  @keyId,@ComponentGrpID,@Amount,
	@StartDate,@EffectiveDate,@BeneficiaryAmount,@LoginId,@ComponentCountryMappingId,
	@SpecialCaseReason,@MailUploadId
   END  

   --Car Damage & Traffic Fine
 IF(@ComponentGrpID=38)
  BEGIN         
      EXEC [dbo].[usp_NLDCarDamageAndTrafficFine_MoveExpToValidUploaderData] @KeyId,@ComponentGrpID,
	  @Amount,@MailUploadId,@PayoutType,@LoginId,@CountryId,@ComponentCountryMappingId    
  END 


IF(@ComponentGrpID=33 )
   BEGIN    
    EXEC [dbo].[usp_NLDRewardsAndRegonition_MoveExpToValidUploaderData] @keyId,@ComponentGrpID,
	@AdvisedMonth,@Year,@Amount,@PayoutType,@Frequency,@CurrencyCode,@InputRemarks,@LoginId,
	@CountryId,@ComponentCountryMappingId,@MailUploadId
   END  
 
 --Benefits
 IF(@ComponentGrpID=46)
   BEGIN    
   EXEC [dbo].[usp_NordicsBenefits_MoveExpToValidUploaderData]@KeyId,@ComponentGrpID,@Amount,
   @PayoutType,@LoginId,@CountryId,@ComponentCountryMappingId,@MailUploadId
   END  
 
 --Miscellaneous Inputs
IF(@ComponentGrpID=50)
BEGIN
EXEC [dbo].[usp_CEMiscellaneousInputs_MoveExpToValidUploaderData] @keyId,@ComponentGrpID,
@AdvisedMonth,@Year,@Amount,@PayoutType,@CurrencyCode,@InputRemarks,@LoginId,
@CountryId,@ComponentCountryMappingId
END

 COMMIT TRANSACTION;  
END TRY  
BEGIN CATCH  
  
ROLLBACK TRANSACTION;  
   	      DECLARE @ERROR_ID  VARCHAR(8000)    
          DECLARE @ERROR_MSG  VARCHAR(8000)        
          DECLARE @ERROR_SEVERITY  VARCHAR(8000)    
          DECLARE @ERROR_STATE  VARCHAR(100)        
          DECLARE @ERROR_PROCEDURE  VARCHAR(8000)    
          DECLARE @ERROR_LINE  VARCHAR(8000)    

          SELECT    
          @ERROR_ID= ERROR_NUMBER(),    
          @ERROR_MSG= ERROR_MESSAGE(),    
          @ERROR_SEVERITY=ERROR_SEVERITY(),    
          @ERROR_STATE=ERROR_STATE(),    
          @ERROR_PROCEDURE='[dbo].[usp_SGP_MoveExpToValidUploaderData]',    
          @ERROR_LINE = ERROR_LINE()    

         INSERT INTO ExceptionLog(ErrorSource, ExceptionMessage, ExceptionStackTrace,
		 InnerException, ExceptionDateTime, CustomMessage)
         VALUES('Console',@ERROR_ID+@ERROR_MSG,@ERROR_SEVERITY,@ERROR_STATE,GETDATE(),
		 @ERROR_PROCEDURE)          

         RAISERROR(@ERROR_ID,@ERROR_SEVERITY,@ERROR_STATE,@ERROR_MSG);
  
END CATCH
