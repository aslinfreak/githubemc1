USE [OneC_2394]
GO
/****** Object:  StoredProcedure [ADMIN].[usp_UpdateBatchJobDetails]    Script Date: 29-06-2025 18:22:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Arya (205604)
-- Create date: OCT 2020
-- Description:	To Update the details of BatchJobs
-- =============================================
ALTER PROCEDURE [ADMIN].[usp_UpdateBatchJobDetails]
@JobId int, @IsActive bit, @IsOneTime bit, 
@StartTime varchar(10), @EndTime varchar(10), @ModifiedBy int
AS
BEGIN

BEGIN TRY
BEGIN TRANSACTION    
SET NOCOUNT ON;
BEGIN
IF EXISTS (SELECT 1 FROM [MAS].[JobMaster] WITH(NOLOCK) WHERE PK_JOBID=@JobId)
BEGIN	
	INSERT INTO [ADMIN].[Log_JobMaster]
		([FK_JobID],[IsActive],[IsOneTime],[StartTime],[EndTime]
		,CreatedBy,CreatedDate
		,[ModifiedBy],[ModifiedDate]
		,[BackUpBy] ,[BackUpDate] ,[Remarks] ,[RowStatus])
	SELECT 
		M.PK_JobID,M.IsActive,M.IsOneTime,
		JS.StartTime,JS.EndTime,M.CreatedBy,M.CreatedDate,
		M.[ModifiedBy],M.[ModifiedDate],
		@ModifiedBy,GETDATE(),
		'Updated through Admin Module',1
	FROM [MAS].[JobMaster] M
	INNER JOIN [MYP].[JobScheduler] JS ON M.PK_JobID=JS.FK_JobID
	where M.PK_JobID=@JobId

	UPDATE [MAS].[JobMaster]
	SET IsActive=@IsActive, isOnetime=@IsOneTime,
	ModifiedBY=@ModifiedBy, ModifiedDate=GETDate()
	WHERE PK_JOBID=@JobId
END
IF EXISTS (SELECT 1 FROM [MYP].[JobScheduler] WITH(NOLOCK) WHERE FK_JOBID=@JobId)
BEGIN
	UPDATE [MYP].[JobScheduler]
	SET StartTime=@StartTime, EndTime=@EndTime,
	ModifiedBy=@ModifiedBy, ModifiedDate=GETDate()
	WHERE FK_JOBID=@JobId
END

Select 1 as Status
END
COMMIT TRAN
       
END TRY

BEGIN CATCH

IF XACT_STATE() <> 0
BEGIN
   SELECT 0 AS Status 
   ROLLBACK TRANSACTION
END
   DECLARE @ERROR_ID  VARCHAR(8000)    
   DECLARE @ERROR_MSG  VARCHAR(8000)
   DECLARE @ERROR_STATE  VARCHAR(100)            
   DECLARE @ERROR_PROCEDURE  VARCHAR(100)    
   DECLARE @ERROR_LINE  VARCHAR(100)    

   SELECT    
    @ERROR_ID= ERROR_NUMBER(),    
    @ERROR_MSG= ERROR_MESSAGE(),  
          @ERROR_STATE=ERROR_STATE(),  
    @ERROR_PROCEDURE='[ADMIN].[usp_UpdateBatchJobDetails]',    
    @ERROR_LINE = ERROR_LINE()    

   INSERT INTO MYP.ExceptionLog(ErrorSource, ExceptionMessage, ExceptionStackTrace, 
   InnerException, ExceptionDateTime,LoginId)
   VALUES('BJ',@ERROR_ID+@ERROR_MSG,@ERROR_STATE+@ERROR_PROCEDURE,NULL,GETDATE(),'JOB')          

   RAISERROR(@ERROR_ID,@ERROR_STATE,@ERROR_MSG);

END CATCH

END
