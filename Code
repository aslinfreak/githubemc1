    public partial class Download : System.Web.UI.Page
    {
        /// <summary>
        /// Page Load
        /// </summary>
        /// <param name="sender">the sender</param>
        /// <param name="e">the e</param>
        protected void Page_Load(object sender, EventArgs e)
        {
            var regexItem = new Regex(@"^[a-zA-Z0-9_\-\s]*$");
          
            string versionkey = ConfigurationManager.AppSettings["Version"].ToString();
            
            string downloadUrl = string.Empty;
            string ClientIdkey = string.Empty;
            string ocm = ConfigurationManager.AppSettings["IsOCMEnabled"].ToString();
            string associateID = HttpContext.Current.Session["UserId"].ToString();
            
            //string ocmcontenid = "CONT6BE08832C7334B89A22C9E61E036E522";

            if (ocm == "1")
            {
                downloadUrl = ConfigurationManager.AppSettings["FileDownloadUIOCM"].ToString();
                ClientIdkey = SendMailer.FetchKeyVaultSecret("OCMClientId");
            }
            else
            {
                downloadUrl = ConfigurationManager.AppSettings["FileDownloadUIOCI"].ToString();

                ClientIdkey = "ec410d51527443f8ba7d14c5aaa66d43";
                    //SendMailer.FetchKeyVaultSecret("OCMClientId");
            }

            string encryptAssociateid = UtilityBAL.Encrypt(associateID, ClientIdkey);

            if (Request.QueryString["fileUploadId"].ToString() != "null")
            {
                try
                {
                    string fileUploadId = string.Empty;
                    if (regexItem.IsMatch(Request.QueryString["fileUploadId"].ToString().Trim()))
                    {
                        fileUploadId = CAS.Security.Application.EncodeHelper.HtmlEncode(
                            HttpUtility.UrlEncode(Request.QueryString["fileUploadId"]));
                    }

                    if (ocm == "1")
                    {
                        string stFinalQueryString = string.Format("?OCMContentID={0}&AssociateID={1}", fileUploadId, encryptAssociateid);
                        string finalurl = string.Format(downloadUrl + stFinalQueryString);
                        Response.Redirect(finalurl);
                    }
                    else
                    {
                        string stFinalQueryString = string.Format("?OCMContentID={0}&categoryidentifier={1}", fileUploadId, encryptAssociateid);
                        string finalurl = string.Format(downloadUrl + stFinalQueryString);
                        Response.Redirect(finalurl);
                    }
                }
                catch (SystemException ex)
                {
                    ErrorLogger logger = new ErrorLogger();
                    logger.LogError(ex);
                    return;
                }
            }
            else
            {
                return;
            }
        }
    }
}
